#!/usr/bin/env python
import base64
import mimetypes
import os

import click
import requests

# OpenAI API Key
api_key = os.environ["OPENAI_API_KEY"]

# Function to encode the image
def encode_image(image_path):
  with open(image_path, "rb") as image_file:
    return base64.b64encode(image_file.read()).decode('utf-8')

def is_image_file(filename):
  # use the mimetype library to determine the type of file
  mimetype = mimetypes.guess_type(filename)[0]
  return mimetype and mimetype.startswith('image')

def describe_image0(image_path, prompt, print_filename=False):
  """
  This program describes the provided image based on the given prompt.
  """
  # if image_path is a directory, iterate over the files in the directory.
  if os.path.isdir(image_path):
    for file in sorted(os.listdir(image_path)):
      child = os.path.join(image_path, file)
      if is_image_file(child) or os.path.isdir(child):
        describe_image0(child, prompt, print_filename=True)
    return

  # Getting the base64 string
  base64_image = encode_image(image_path)

  headers = {
    "Content-Type": "application/json",
    "Authorization": f"Bearer {api_key}"
  }

  payload = {
    "model": "gpt-4-vision-preview",
    "messages": [
      {
        "role": "user",
        "content": [
          {
            "type": "text",
            "text": prompt
          },
          {
            "type": "image_url",
            "image_url": {
              "url": f"data:image/jpeg;base64,{base64_image}"
            }
          }
        ]
      }
    ],
    "max_tokens": 300
  }

  if print_filename:
    print(f"File: {image_path}\n\nDescription:")
  response = requests.post("https://api.openai.com/v1/chat/completions", headers=headers, json=payload)
  print(response.json()['choices'][0]['message']['content'])

@click.command()
@click.argument('image_path', type=click.Path(exists=True))
@click.option('--prompt', default='Describe this image', help='Prompt for describing the image.')
def describe_image(image_path, prompt):
  describe_image0(image_path, prompt)

if __name__ == '__main__':
    describe_image()
