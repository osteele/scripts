#!/bin/bash
set -euo pipefail

# Check for llm installation
if ! command -v llm >/dev/null 2>&1; then
    echo "Error: llm command not found. Install from https://llm.datasette.io/en/stable/setup.html" >&2
    exit 1
fi

usage() {
    cat << EOF
Usage: $(basename "$0") <commit-range>

Combine git commit messages in a range using AI.

Options:
    -m, --model MODEL  Specify the LLM model to use (default: deepseek-coder or o1-mini)
                      Examples: gpt-4, claude-3-opus, mistral-7b, ...
    -l, --list        List available models
    -h, --help        Show this help

Example:
    $(basename "$0") HEAD~3..HEAD  # Combine last 3 commit messages
    $(basename "$0") abc123..def456  # Combine messages between two commits
EOF
    exit 1
}

# Default model selection
select_default_model() {
    local models
    models=$(llm models)
    if echo "$models" | grep -q 'deepseek-coder'; then
        echo "deepseek-coder"
    elif echo "$models" | grep -q 'o1-mini'; then
        echo "o1-mini"
    else
        echo "gpt-4"  # Fallback
    fi
}

model=$(select_default_model)

# Parse arguments
while [[ $# -gt 0 ]]; do
    case "$1" in
        -m|--model)
            model="$2"
            shift 2
            ;;
        -l|--list)
            echo "Available models:"
            llm models
            exit 0
            ;;
        -h|--help)
            usage
            ;;
        *)
            commit_range="$1"
            shift
            ;;
    esac
done

# Check if we're in a git repository
if ! git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
    echo "Error: Not in a git repository" >&2
    exit 1
fi

# Check if commit range is provided
if [ -z "${commit_range:-}" ]; then
    echo "Error: No commit range provided" >&2
    usage
fi

# Get commit messages
echo "Fetching commit messages..." >&2
commit_messages=$(git log --format="%B" "$commit_range")

if [ -z "$commit_messages" ]; then
    echo "Error: No commits found in range $commit_range" >&2
    exit 1
fi

# Generate combined message
echo "Combining messages using $model..." >&2
llm --model "$model" "Combine these git commit messages into a single, comprehensive commit message that summarizes all the changes:

$commit_messages

The combined message should:
1. Start with a clear, concise summary line
2. Include relevant details from individual commits
3. Use the conventional commit message format
4. Not include redundant information" | sed 's/\*\*//g'
